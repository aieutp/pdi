WITH "Q_NODES_PLAN_CHILDREN" AS (
   SELECT N.PARTY_ID,
        N.NODE_TYPE_ID,
        N.DISPLAY_NAME,
        N.DESCRIPTION,
        IND.INDICATOR_UUID,
        PR.PARTY_ID_TO,
        T.FECHA_AVANCE
        
   FROM  SGPDI.TB_PDI_PARTY P
   JOIN (SELECT PARTY_ID,
           NODE_TYPE_ID,
           DESCRIPTION,
           DISPLAY_NAME,
           DENSE_RANK() OVER
           (PARTITION BY PARTY_ID ORDER BY UPDATE_DATETIME DESC) AS RN,
           DATABASE_ACTION
        FROM SGPDI.TB_PDI_PARTY_NODE
        WHERE PLAN_ID IN (___ANIO___) AND STATUS_ID <>'FINISHED' 
        AND CREATED_DATETIME < TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS')
        ) N ON (N.RN=1
            AND P.PARTY_ID = N.PARTY_ID
            AND P.PARTY_TYPE_ID='SIMPLE'
            AND N.DATABASE_ACTION<>2)
            LEFT OUTER JOIN (        
            SELECT NODE_ID,RULE_TIME_ID,TRUNC(A.CREATED_DATETIME)+1 AS FECHA_AVANCE,FECHA_CORTE,DENSE_RANK() OVER (PARTITION BY NODE_ID ORDER BY FECHA_CORTE DESC) AS RN
            FROM SGPDI.TB_PDI_RULES_TIME RT JOIN SGPDI.TB_PDI_ADVANCE A ON (RT.PLAN_ID IN (___ANIO___) AND FECHA_CORTE<= TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS') AND A.RULE_TIME_ID = RT.ID AND A.ROW_STATUS = 1) 
        ) T ON (T.RN = 1 AND P.PARTY_ID = T.NODE_ID)  
        LEFT OUTER JOIN SGPDI.TB_PDI_PARTY_RELATIONSHIP PR ON (PR.PARTY_ID_FROM = N.PARTY_ID
                                                           AND PARTY_RELATIONSHIP_TYPE_ID='HIERARCHY_NODE'
                                                           AND PR.STATUS_ID = 'ACTIVE'
                                                           AND TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS') BETWEEN PR.FROM_DATE
                                                           AND (CASE WHEN PR.THRU_DATE IS NULL THEN (TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS')+2-1/(24*60*60*1000)) ELSE PR.THRU_DATE END))
        LEFT OUTER JOIN SGPDI.TB_IND_REL_NODE_INDICATOR IND ON (IND.PARTY_ID = N.PARTY_ID AND TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS') BETWEEN IND.FROM_DATE AND (CASE WHEN IND.THRU_DATE IS NULL THEN (TO_TIMESTAMP('31/12/2023', 'DD/MM/RRRR HH24:MI:SS')+2-1/(24*60*60*1000)) ELSE IND.THRU_DATE END))
        )
SELECT P.PARTY_ID,
    P.PARTY_ID_TO,
    P.NODE_TYPE_ID,
    D.DISPLAY_NAME,
    D.UUID,D.DESCRIPTION,
    D.GOAL_VALUE,
    D.MILESTONE_VALUE,
    D.MILESTONE_DATE,
    D.ADVANCE_VALUE,
    TO_CHAR(D.ADVANCE_DATETIME,'DD/MM/YYYY')ADVANCE_DATETIME2,
    D.ADVANCE_DATETIME,
    D.DESCRIPTION_VALUE,
    P.FECHA_AVANCE
FROM Q_NODES_PLAN_CHILDREN P,
--TABLE (SGPDI.PK_IND_QUERYS.FIND_DATAT_INDICATOR_UUID(P.INDICATOR_UUID,TO_TIMESTAMP(:V_END_DATE, 'DD/MM/RRRR HH24:MI:SS'))) D;
TABLE (SGPDI.PK_IND_QUERYS.FIND_DATAT_INDICATOR_UUID(P.INDICATOR_UUID, P.FECHA_AVANCE)) D